From 6b9148d8ad9e39c784ee13508f6a3332001f65ef Mon Sep 17 00:00:00 2001
From: Preeti Arumalla <parumalla385@gmail.com>
Date: Tue, 25 Aug 2020 13:01:41 -0400
Subject: [PATCH] Create Patch File

---
 src/DataManipulator.ts | 24 +++++++++++++++++++-----
 src/Graph.tsx          | 29 ++++++++++++++++++++---------
 2 files changed, 39 insertions(+), 14 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..c87374e 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,19 +1,33 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
   timestamp: Date,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined
 }
 
 
 export class DataManipulator {
   static generateRow(serverResponds: ServerRespond[]): Row[] {
+    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price) / 2;
+    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
     return serverResponds.map((el: any) => {
       return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
+        price_abc: priceABC,
+        price_def: priceDEF,
+        ratio,
+        timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ?
+          serverResponds[0].timestamp : serverResponds[1].timestamp,
+        upper_bound: upperBound,
+        lower_bound: lowerBound,
+        trigger_alert: (ratio > upperBound || ratio < lowerBound) ? ratio : undefined
       };
     })
   }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..42000d7 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,15 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
+      price_abc: 'float',
+      price_def: 'float',
+      // Track ratio of two stocks
+      ratio: 'float',
       timestamp: 'date',
+      upper_bound: 'float',
+      lower_bound: 'float',
+      // When upper and lower bounds are crossed
+      trigger_alert: 'float'
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -35,15 +40,21 @@ class Graph extends Component<IProps, {}> {
     if (this.table) {
       // Load the `table` in the `<perspective-viewer>` DOM reference.
       elem.load(this.table);
+      // Continuous line
       elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
+      // X-axis
       elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
+      // Focus
+      elem.setAttribute('columns', '["ratio", "lower_bound", "upper_bound", "trigger_alert"]');
+      // Average out the all the values of non-unique fields for similar datapoints before treating them as one
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio: 'avg',
+        timestamp: 'distinctcount',
+        upper_bound: 'avg',
+        lower_bound: 'avg',
+        trigger_alert: 'avg'
       }));
     }
   }
-- 
2.27.0

